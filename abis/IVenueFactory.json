{"abi":[{"type":"function","name":"createVenueProxy","inputs":[{"name":"initialOwner","type":"address","internalType":"address"},{"name":"proposalPeriodDuration","type":"uint256","internalType":"uint256"},{"name":"proposalDateExtension","type":"uint256","internalType":"uint256"},{"name":"proposalDateMinimumFuture","type":"uint256","internalType":"uint256"},{"name":"proposalPeriodExtensionThreshold","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"getDeployedVenues","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"setVersion","inputs":[{"name":"_version","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateVenueImplementation","inputs":[{"name":"newImplementation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"createVenueProxy(address,uint256,uint256,uint256,uint256)":"9708ace2","getDeployedVenues()":"68b8fa1a","setVersion(string)":"788bc78c","updateVenueImplementation(address)":"e44850ea"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalPeriodDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalDateExtension\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalDateMinimumFuture\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalPeriodExtensionThreshold\",\"type\":\"uint256\"}],\"name\":\"createVenueProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployedVenues\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"name\":\"setVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"updateVenueImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createVenueProxy(address,uint256,uint256,uint256,uint256)\":{\"params\":{\"initialOwner\":\"The address that will own the newly created venue proxy.\",\"proposalDateExtension\":\"Extension duration for proposal dates.\",\"proposalDateMinimumFuture\":\"The minimum future date for a proposal.\",\"proposalPeriodDuration\":\"Duration of the proposal period.\",\"proposalPeriodExtensionThreshold\":\"Threshold for extending the proposal period.\"},\"returns\":{\"_0\":\"The address of the newly created venue proxy.\"}},\"getDeployedVenues()\":{\"returns\":{\"_0\":\"An array of addresses of the deployed venue proxies.\"}},\"setVersion(string)\":{\"params\":{\"_version\":\"New version to set.\"}},\"updateVenueImplementation(address)\":{\"params\":{\"newImplementation\":\"New venue implementation address to set.\"}}},\"title\":\"IVenueFactory Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createVenueProxy(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Creates a new venue proxy instance with initial parameters and returns its address.\"},\"getDeployedVenues()\":{\"notice\":\"Returns the list of deployed venue proxies.\"},\"setVersion(string)\":{\"notice\":\"Sets a new version for the venue factory.\"},\"updateVenueImplementation(address)\":{\"notice\":\"Updates the venue implementation contract address.\"}},\"notice\":\"Interface for the VenueFactory contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/venue/IVenueFactory.sol\":\"IVenueFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/venue/IVenueFactory.sol\":{\"keccak256\":\"0x635b67dcbf62fc2eb884c4bb55095d4ae55fb97c992afa8fa9524595bca85396\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d3d1508cc1aea7d3335d3d6ded31636712e605179ab186bc7d641d11da7d67\",\"dweb:/ipfs/QmXZFq1tVBskCotnxpGzi2YsDYY5M3vNbLz83pws9TwtTy\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"uint256","name":"proposalPeriodDuration","type":"uint256"},{"internalType":"uint256","name":"proposalDateExtension","type":"uint256"},{"internalType":"uint256","name":"proposalDateMinimumFuture","type":"uint256"},{"internalType":"uint256","name":"proposalPeriodExtensionThreshold","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createVenueProxy","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getDeployedVenues","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"_version","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setVersion"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateVenueImplementation"}],"devdoc":{"kind":"dev","methods":{"createVenueProxy(address,uint256,uint256,uint256,uint256)":{"params":{"initialOwner":"The address that will own the newly created venue proxy.","proposalDateExtension":"Extension duration for proposal dates.","proposalDateMinimumFuture":"The minimum future date for a proposal.","proposalPeriodDuration":"Duration of the proposal period.","proposalPeriodExtensionThreshold":"Threshold for extending the proposal period."},"returns":{"_0":"The address of the newly created venue proxy."}},"getDeployedVenues()":{"returns":{"_0":"An array of addresses of the deployed venue proxies."}},"setVersion(string)":{"params":{"_version":"New version to set."}},"updateVenueImplementation(address)":{"params":{"newImplementation":"New venue implementation address to set."}}},"version":1},"userdoc":{"kind":"user","methods":{"createVenueProxy(address,uint256,uint256,uint256,uint256)":{"notice":"Creates a new venue proxy instance with initial parameters and returns its address."},"getDeployedVenues()":{"notice":"Returns the list of deployed venue proxies."},"setVersion(string)":{"notice":"Sets a new version for the venue factory."},"updateVenueImplementation(address)":{"notice":"Updates the venue implementation contract address."}},"version":1}},"settings":{"remappings":["@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/venue/IVenueFactory.sol":"IVenueFactory"},"evmVersion":"paris","libraries":{}},"sources":{"src/venue/IVenueFactory.sol":{"keccak256":"0x635b67dcbf62fc2eb884c4bb55095d4ae55fb97c992afa8fa9524595bca85396","urls":["bzz-raw://87d3d1508cc1aea7d3335d3d6ded31636712e605179ab186bc7d641d11da7d67","dweb:/ipfs/QmXZFq1tVBskCotnxpGzi2YsDYY5M3vNbLz83pws9TwtTy"],"license":"MIT"}},"version":1},"id":83}