{"abi":[{"type":"function","name":"acceptNomination","inputs":[{"name":"_name","type":"string","internalType":"string"},{"name":"_bio","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deregisterArtist","inputs":[{"name":"_artistId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getArtist","inputs":[{"name":"artistAddress","type":"address","internalType":"address"}],"outputs":[{"name":"name","type":"string","internalType":"string"},{"name":"bio","type":"string","internalType":"string"},{"name":"wallet","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isArtistRegistered","inputs":[{"name":"artistAddress","type":"address","internalType":"address"}],"outputs":[{"name":"isRegistered","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"nominate","inputs":[{"name":"nominee","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setContractURI","inputs":[{"name":"newURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTokenURI","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"newURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateArtist","inputs":[{"name":"_artistId","type":"uint256","internalType":"uint256"},{"name":"_name","type":"string","internalType":"string"},{"name":"_bio","type":"string","internalType":"string"},{"name":"_wallet","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ArtistAccepted","inputs":[{"name":"artistId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"artistAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ArtistDeregistered","inputs":[{"name":"artistId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ArtistNominated","inputs":[{"name":"nominee","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ArtistRegistered","inputs":[{"name":"artistId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"name","type":"string","indexed":false,"internalType":"string"},{"name":"wallet","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ArtistUpdated","inputs":[{"name":"artistId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"name","type":"string","indexed":false,"internalType":"string"},{"name":"bio","type":"string","indexed":false,"internalType":"string"},{"name":"wallet","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ArtistWaitlisted","inputs":[{"name":"artist","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"contractURIUpdated","inputs":[{"name":"newURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"tokenURIUpdated","inputs":[{"name":"newURI","type":"string","indexed":false,"internalType":"string"},{"name":"tokenId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"acceptNomination(string,string)":"c8450ef4","deregisterArtist(uint256)":"65f91e6d","getArtist(address)":"b949c804","isArtistRegistered(address)":"64fd2886","nominate(address)":"b332180b","setContractURI(string)":"938e3d7b","setTokenURI(uint256,string)":"162094c4","updateArtist(uint256,string,string,address)":"05b47919"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"artistId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"}],\"name\":\"ArtistAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"artistId\",\"type\":\"uint256\"}],\"name\":\"ArtistDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nominee\",\"type\":\"address\"}],\"name\":\"ArtistNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"artistId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"ArtistRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"artistId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"ArtistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"artist\",\"type\":\"address\"}],\"name\":\"ArtistWaitlisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"contractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURIUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"acceptNomination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_artistId\",\"type\":\"uint256\"}],\"name\":\"deregisterArtist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"}],\"name\":\"getArtist\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"}],\"name\":\"isArtistRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nominee\",\"type\":\"address\"}],\"name\":\"nominate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_artistId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"updateArtist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ArtistAccepted(uint256,address)\":{\"params\":{\"artistAddress\":\"Wallet address of the artist who was accepted.\",\"artistId\":\"Unique identifier assigned to the artist upon registration.\"}},\"ArtistDeregistered(uint256)\":{\"params\":{\"artistId\":\"Unique identifier of the deregistered artist.\"}},\"ArtistNominated(address)\":{\"params\":{\"nominee\":\"Wallet address of the artist being nominated.\"}},\"ArtistRegistered(uint256,string,address)\":{\"params\":{\"artistId\":\"Unique identifier for the newly registered artist.\",\"name\":\"Name of the artist registered.\",\"wallet\":\"Wallet address associated with the artist.\"}},\"ArtistUpdated(uint256,string,string,address)\":{\"params\":{\"artistId\":\"Unique identifier of the artist whose profile is updated.\",\"bio\":\"Updated biography or description of the artist.\",\"name\":\"Updated name of the artist.\",\"wallet\":\"Updated wallet address of the artist.\"}},\"ArtistWaitlisted(address)\":{\"params\":{\"artist\":\"Address of the artist who is waitlisted.\"}},\"contractURIUpdated(string)\":{\"params\":{\"newURI\":\"The new URI that has been set.\"}},\"tokenURIUpdated(string,uint256)\":{\"params\":{\"newURI\":\"The new metadata URI.\",\"tokenId\":\"The token ID for which the URI was updated.\"}}},\"kind\":\"dev\",\"methods\":{\"acceptNomination(string,string)\":{\"params\":{\"_bio\":\"Biography or description to accompany the registration.\",\"_name\":\"Name to register under.\"}},\"deregisterArtist(uint256)\":{\"params\":{\"_artistId\":\"The unique identifier of the artist to deregister.\"}},\"getArtist(address)\":{\"params\":{\"artistAddress\":\"Wallet address of the artist.\"},\"returns\":{\"bio\":\"Biography or description of the artist.\",\"name\":\"Name of the artist.\",\"wallet\":\"Wallet address of the artist.\"}},\"isArtistRegistered(address)\":{\"params\":{\"artistAddress\":\"Address to check against the registry.\"},\"returns\":{\"isRegistered\":\"True if the address is registered as an artist, false otherwise.\"}},\"nominate(address)\":{\"params\":{\"nominee\":\"Wallet address of the individual being nominated.\"}},\"setContractURI(string)\":{\"params\":{\"newURI\":\"New URI to set for the artist token.\"}},\"setTokenURI(uint256,string)\":{\"params\":{\"newURI\":\"New URI to set for the artist token.\",\"tokenId\":\"Unique token identifier associated with the artist.\"}},\"updateArtist(uint256,string,string,address)\":{\"params\":{\"_artistId\":\"Unique identifier of the artist whose profile is being updated.\",\"_bio\":\"New biography or description for the artist.\",\"_name\":\"New name for the artist.\",\"_wallet\":\"New wallet address for the artist.\"}}},\"title\":\"Artist Registry Interface\",\"version\":1},\"userdoc\":{\"events\":{\"ArtistAccepted(uint256,address)\":{\"notice\":\"Emitted when a waitlisted artist accepts their nomination and completes registration.\"},\"ArtistDeregistered(uint256)\":{\"notice\":\"Emitted when an artist chooses to deregister themselves from the registry.\"},\"ArtistNominated(address)\":{\"notice\":\"Emitted when an artist is nominated by another artist, typically backed by referral credits.\"},\"ArtistRegistered(uint256,string,address)\":{\"notice\":\"Emitted when a new artist is successfully registered in the registry.\"},\"ArtistUpdated(uint256,string,string,address)\":{\"notice\":\"Emitted when an existing artist updates their profile information.\"},\"ArtistWaitlisted(address)\":{\"notice\":\"Emitted when an artist is waitlisted, often after nomination or referral application.\"},\"contractURIUpdated(string)\":{\"notice\":\"Emitted when the general token URI is updated.\"},\"tokenURIUpdated(string,uint256)\":{\"notice\":\"Emitted when the URI of a specific artist token is updated.\"}},\"kind\":\"user\",\"methods\":{\"acceptNomination(string,string)\":{\"notice\":\"Accepts a nomination to become a registered artist.\"},\"deregisterArtist(uint256)\":{\"notice\":\"Allows an artist to voluntarily deregister themselves from the registry.\"},\"getArtist(address)\":{\"notice\":\"Retrieves detailed information about an artist using their wallet address.\"},\"isArtistRegistered(address)\":{\"notice\":\"Checks whether a specific wallet address is registered as an artist.\"},\"nominate(address)\":{\"notice\":\"Nominates an individual to become an artist within the registry.\"},\"setContractURI(string)\":{\"notice\":\"Updates the metadata URI for the contract.\"},\"setTokenURI(uint256,string)\":{\"notice\":\"Updates the metadata URI for a specific artist token.\"},\"updateArtist(uint256,string,string,address)\":{\"notice\":\"Updates the profile of a registered artist.\"}},\"notice\":\"Defines the interface for managing artist profiles and nominations within a decentralized registry.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/registry/artist/IArtistRegistry.sol\":\"IArtistRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/registry/artist/IArtistRegistry.sol\":{\"keccak256\":\"0xf4c1c9fbc8e58baf99721c8f762e237e31fca96d14138659e410b3809d759777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee2d529184203a0fb5026b21d5e1ec4e9aa261cad06f30a0fc8e6072b8a725d2\",\"dweb:/ipfs/QmVFr3cSMZqMRsNectzwxyC5phYWaw2yZxgDjk7kv7Z4Gt\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"artistId","type":"uint256","indexed":true},{"internalType":"address","name":"artistAddress","type":"address","indexed":false}],"type":"event","name":"ArtistAccepted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"artistId","type":"uint256","indexed":true}],"type":"event","name":"ArtistDeregistered","anonymous":false},{"inputs":[{"internalType":"address","name":"nominee","type":"address","indexed":true}],"type":"event","name":"ArtistNominated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"artistId","type":"uint256","indexed":true},{"internalType":"string","name":"name","type":"string","indexed":false},{"internalType":"address","name":"wallet","type":"address","indexed":false}],"type":"event","name":"ArtistRegistered","anonymous":false},{"inputs":[{"internalType":"uint256","name":"artistId","type":"uint256","indexed":true},{"internalType":"string","name":"name","type":"string","indexed":false},{"internalType":"string","name":"bio","type":"string","indexed":false},{"internalType":"address","name":"wallet","type":"address","indexed":false}],"type":"event","name":"ArtistUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"artist","type":"address","indexed":true}],"type":"event","name":"ArtistWaitlisted","anonymous":false},{"inputs":[{"internalType":"string","name":"newURI","type":"string","indexed":false}],"type":"event","name":"contractURIUpdated","anonymous":false},{"inputs":[{"internalType":"string","name":"newURI","type":"string","indexed":false},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":false}],"type":"event","name":"tokenURIUpdated","anonymous":false},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_bio","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"acceptNomination"},{"inputs":[{"internalType":"uint256","name":"_artistId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deregisterArtist"},{"inputs":[{"internalType":"address","name":"artistAddress","type":"address"}],"stateMutability":"view","type":"function","name":"getArtist","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"bio","type":"string"},{"internalType":"address","name":"wallet","type":"address"}]},{"inputs":[{"internalType":"address","name":"artistAddress","type":"address"}],"stateMutability":"view","type":"function","name":"isArtistRegistered","outputs":[{"internalType":"bool","name":"isRegistered","type":"bool"}]},{"inputs":[{"internalType":"address","name":"nominee","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"nominate"},{"inputs":[{"internalType":"string","name":"newURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setContractURI"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"newURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setTokenURI"},{"inputs":[{"internalType":"uint256","name":"_artistId","type":"uint256"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_bio","type":"string"},{"internalType":"address","name":"_wallet","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateArtist"}],"devdoc":{"kind":"dev","methods":{"acceptNomination(string,string)":{"params":{"_bio":"Biography or description to accompany the registration.","_name":"Name to register under."}},"deregisterArtist(uint256)":{"params":{"_artistId":"The unique identifier of the artist to deregister."}},"getArtist(address)":{"params":{"artistAddress":"Wallet address of the artist."},"returns":{"bio":"Biography or description of the artist.","name":"Name of the artist.","wallet":"Wallet address of the artist."}},"isArtistRegistered(address)":{"params":{"artistAddress":"Address to check against the registry."},"returns":{"isRegistered":"True if the address is registered as an artist, false otherwise."}},"nominate(address)":{"params":{"nominee":"Wallet address of the individual being nominated."}},"setContractURI(string)":{"params":{"newURI":"New URI to set for the artist token."}},"setTokenURI(uint256,string)":{"params":{"newURI":"New URI to set for the artist token.","tokenId":"Unique token identifier associated with the artist."}},"updateArtist(uint256,string,string,address)":{"params":{"_artistId":"Unique identifier of the artist whose profile is being updated.","_bio":"New biography or description for the artist.","_name":"New name for the artist.","_wallet":"New wallet address for the artist."}}},"version":1},"userdoc":{"kind":"user","methods":{"acceptNomination(string,string)":{"notice":"Accepts a nomination to become a registered artist."},"deregisterArtist(uint256)":{"notice":"Allows an artist to voluntarily deregister themselves from the registry."},"getArtist(address)":{"notice":"Retrieves detailed information about an artist using their wallet address."},"isArtistRegistered(address)":{"notice":"Checks whether a specific wallet address is registered as an artist."},"nominate(address)":{"notice":"Nominates an individual to become an artist within the registry."},"setContractURI(string)":{"notice":"Updates the metadata URI for the contract."},"setTokenURI(uint256,string)":{"notice":"Updates the metadata URI for a specific artist token."},"updateArtist(uint256,string,string,address)":{"notice":"Updates the profile of a registered artist."}},"version":1}},"settings":{"remappings":["@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/registry/artist/IArtistRegistry.sol":"IArtistRegistry"},"evmVersion":"paris","libraries":{}},"sources":{"src/registry/artist/IArtistRegistry.sol":{"keccak256":"0xf4c1c9fbc8e58baf99721c8f762e237e31fca96d14138659e410b3809d759777","urls":["bzz-raw://ee2d529184203a0fb5026b21d5e1ec4e9aa261cad06f30a0fc8e6072b8a725d2","dweb:/ipfs/QmVFr3cSMZqMRsNectzwxyC5phYWaw2yZxgDjk7kv7Z4Gt"],"license":"MIT"}},"version":1},"id":50}