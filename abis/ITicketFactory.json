{"abi":[{"type":"function","name":"createTicketProxy","inputs":[{"name":"initialOwner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"getDeployedTickets","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"setContractAddresses","inputs":[{"name":"boxOfficeAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setVersion","inputs":[{"name":"_version","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateTicketImplementation","inputs":[{"name":"newImplementation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"createTicketProxy(address)":"de4ed3cf","getDeployedTickets()":"0d7c6d68","setContractAddresses(address)":"1f88bb87","setVersion(string)":"788bc78c","updateTicketImplementation(address)":"232b158b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"createTicketProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployedTickets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"boxOfficeAddress\",\"type\":\"address\"}],\"name\":\"setContractAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"name\":\"setVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"updateTicketImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createTicketProxy(address)\":{\"params\":{\"initialOwner\":\"The address that will own the newly created ticket proxy.\"},\"returns\":{\"_0\":\"The address of the newly created ticket proxy.\"}},\"getDeployedTickets()\":{\"returns\":{\"_0\":\"An array of addresses of the deployed ticket proxies.\"}},\"setContractAddresses(address)\":{\"params\":{\"boxOfficeAddress\":\"The address of the BoxOffice contract.\"}},\"setVersion(string)\":{\"params\":{\"_version\":\"New version to set.\"}},\"updateTicketImplementation(address)\":{\"params\":{\"newImplementation\":\"New ticket implementation address to set.\"}}},\"title\":\"ITicketFactory Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createTicketProxy(address)\":{\"notice\":\"Creates a new ticket proxy instance for a specific owner and returns its address.\"},\"getDeployedTickets()\":{\"notice\":\"Returns the list of deployed ticket proxies.\"},\"setContractAddresses(address)\":{\"notice\":\"Sets the address of the BoxOffice contract that will interact with this TicketFactory.\"},\"setVersion(string)\":{\"notice\":\"Sets a new version for the ticket factory.\"},\"updateTicketImplementation(address)\":{\"notice\":\"Updates the ticket implementation contract address.\"}},\"notice\":\"Interface for the TicketFactory contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ticket/ITicketFactory.sol\":\"ITicketFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/ticket/ITicketFactory.sol\":{\"keccak256\":\"0x3aaa52a5ea4270030dc11d42adb8bc2a2abee0c1a8ab72d9474fa41ce5143b27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3edca91d39ec958e1ee0bac27c191b23c433b166557172f479b6ec511d903a0f\",\"dweb:/ipfs/QmWcAQCRqub9EvxtSGC6CY4jDecY9BTgQXjkFTeC8GUE8Z\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"createTicketProxy","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getDeployedTickets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"boxOfficeAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setContractAddresses"},{"inputs":[{"internalType":"string","name":"_version","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setVersion"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateTicketImplementation"}],"devdoc":{"kind":"dev","methods":{"createTicketProxy(address)":{"params":{"initialOwner":"The address that will own the newly created ticket proxy."},"returns":{"_0":"The address of the newly created ticket proxy."}},"getDeployedTickets()":{"returns":{"_0":"An array of addresses of the deployed ticket proxies."}},"setContractAddresses(address)":{"params":{"boxOfficeAddress":"The address of the BoxOffice contract."}},"setVersion(string)":{"params":{"_version":"New version to set."}},"updateTicketImplementation(address)":{"params":{"newImplementation":"New ticket implementation address to set."}}},"version":1},"userdoc":{"kind":"user","methods":{"createTicketProxy(address)":{"notice":"Creates a new ticket proxy instance for a specific owner and returns its address."},"getDeployedTickets()":{"notice":"Returns the list of deployed ticket proxies."},"setContractAddresses(address)":{"notice":"Sets the address of the BoxOffice contract that will interact with this TicketFactory."},"setVersion(string)":{"notice":"Sets a new version for the ticket factory."},"updateTicketImplementation(address)":{"notice":"Updates the ticket implementation contract address."}},"version":1}},"settings":{"remappings":["@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/ticket/ITicketFactory.sol":"ITicketFactory"},"evmVersion":"paris","libraries":{}},"sources":{"src/ticket/ITicketFactory.sol":{"keccak256":"0x3aaa52a5ea4270030dc11d42adb8bc2a2abee0c1a8ab72d9474fa41ce5143b27","urls":["bzz-raw://3edca91d39ec958e1ee0bac27c191b23c433b166557172f479b6ec511d903a0f","dweb:/ipfs/QmWcAQCRqub9EvxtSGC6CY4jDecY9BTgQXjkFTeC8GUE8Z"],"license":"MIT"}},"version":1},"id":96}