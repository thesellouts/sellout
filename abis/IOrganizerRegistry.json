{"abi":[{"type":"function","name":"acceptNomination","inputs":[{"name":"_name","type":"string","internalType":"string"},{"name":"_bio","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deregisterOrganizer","inputs":[{"name":"organizerId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getOrganizer","inputs":[{"name":"organizerAddress","type":"address","internalType":"address"}],"outputs":[{"name":"name","type":"string","internalType":"string"},{"name":"bio","type":"string","internalType":"string"},{"name":"wallet","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isOrganizerRegistered","inputs":[{"name":"organizer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"nominate","inputs":[{"name":"nominee","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setContractURI","inputs":[{"name":"newURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTokenURI","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"newURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateOrganizer","inputs":[{"name":"organizerId","type":"uint256","internalType":"uint256"},{"name":"name","type":"string","internalType":"string"},{"name":"bio","type":"string","internalType":"string"},{"name":"wallet","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OrganizerAccepted","inputs":[{"name":"nominee","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OrganizerDeregistered","inputs":[{"name":"organizerId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OrganizerNominated","inputs":[{"name":"nominee","type":"address","indexed":true,"internalType":"address"},{"name":"nominator","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OrganizerRegistered","inputs":[{"name":"organizerId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"name","type":"string","indexed":false,"internalType":"string"},{"name":"wallet","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OrganizerUpdated","inputs":[{"name":"organizerId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"name","type":"string","indexed":false,"internalType":"string"},{"name":"bio","type":"string","indexed":false,"internalType":"string"},{"name":"wallet","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"contractURIUpdated","inputs":[{"name":"newURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"tokenURIUpdated","inputs":[{"name":"newURI","type":"string","indexed":false,"internalType":"string"},{"name":"tokenId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"acceptNomination(string,string)":"c8450ef4","deregisterOrganizer(uint256)":"fa9bbe36","getOrganizer(address)":"4092f2b7","isOrganizerRegistered(address)":"29e7dbd9","nominate(address)":"b332180b","setContractURI(string)":"938e3d7b","setTokenURI(uint256,string)":"162094c4","updateOrganizer(uint256,string,string,address)":"9dabad5f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nominee\",\"type\":\"address\"}],\"name\":\"OrganizerAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"organizerId\",\"type\":\"uint256\"}],\"name\":\"OrganizerDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nominee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nominator\",\"type\":\"address\"}],\"name\":\"OrganizerNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"organizerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"OrganizerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"organizerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"OrganizerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"contractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURIUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"acceptNomination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"organizerId\",\"type\":\"uint256\"}],\"name\":\"deregisterOrganizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"organizerAddress\",\"type\":\"address\"}],\"name\":\"getOrganizer\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"}],\"name\":\"isOrganizerRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nominee\",\"type\":\"address\"}],\"name\":\"nominate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"organizerId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"updateOrganizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OrganizerAccepted(address)\":{\"params\":{\"nominee\":\"The address of the nominee who accepted the nomination.\"}},\"OrganizerDeregistered(uint256)\":{\"params\":{\"organizerId\":\"The unique identifier of the deregistered organizer.\"}},\"OrganizerNominated(address,address)\":{\"params\":{\"nominator\":\"The address that made the nomination.\",\"nominee\":\"The address that was nominated.\"}},\"OrganizerRegistered(uint256,string,address)\":{\"params\":{\"name\":\"The name of the organizer.\",\"organizerId\":\"The unique identifier of the organizer.\",\"wallet\":\"The wallet address associated with the organizer.\"}},\"OrganizerUpdated(uint256,string,string,address)\":{\"params\":{\"bio\":\"The updated biography of the organizer.\",\"name\":\"The updated name of the organizer.\",\"organizerId\":\"The unique identifier of the organizer whose profile was updated.\",\"wallet\":\"The updated wallet address of the organizer.\"}},\"contractURIUpdated(string)\":{\"params\":{\"newURI\":\"The new URI that has been set.\"}},\"tokenURIUpdated(string,uint256)\":{\"params\":{\"newURI\":\"The new metadata URI.\",\"tokenId\":\"The token ID for which the URI was updated.\"}}},\"kind\":\"dev\",\"methods\":{\"acceptNomination(string,string)\":{\"params\":{\"_bio\":\"The biography or description of the nominee.\",\"_name\":\"The name of the nominee.\"}},\"deregisterOrganizer(uint256)\":{\"params\":{\"organizerId\":\"The unique identifier of the organizer to be deregistered.\"}},\"getOrganizer(address)\":{\"params\":{\"organizerAddress\":\"The wallet address of the organizer.\"},\"returns\":{\"bio\":\"The biography or description of the organizer.\",\"name\":\"The name of the organizer.\",\"wallet\":\"The wallet address associated with the organizer.\"}},\"isOrganizerRegistered(address)\":{\"params\":{\"organizer\":\"The address to check.\"},\"returns\":{\"_0\":\"True if the address is registered as an organizer, otherwise false.\"}},\"nominate(address)\":{\"params\":{\"nominee\":\"The address to be nominated.\"}},\"setContractURI(string)\":{\"params\":{\"newURI\":\"New URI to set for the artist token.\"}},\"setTokenURI(uint256,string)\":{\"params\":{\"newURI\":\"The new URI string that will represent the token's metadata.\",\"tokenId\":\"The unique identifier of the organizer token.\"}},\"updateOrganizer(uint256,string,string,address)\":{\"params\":{\"bio\":\"The new biography of the organizer.\",\"name\":\"The new name of the organizer.\",\"organizerId\":\"The unique identifier of the organizer whose information is being updated.\",\"wallet\":\"The new wallet address of the organizer.\"}}},\"title\":\"Organizer Registry Interface\",\"version\":1},\"userdoc\":{\"events\":{\"OrganizerAccepted(address)\":{\"notice\":\"Emitted when a nominated address accepts the nomination and is registered as an organizer.\"},\"OrganizerDeregistered(uint256)\":{\"notice\":\"Emitted when an organizer is deregistered from the system.\"},\"OrganizerNominated(address,address)\":{\"notice\":\"Emitted when an address is nominated to become an organizer.\"},\"OrganizerRegistered(uint256,string,address)\":{\"notice\":\"Emitted when an organizer is successfully registered.\"},\"OrganizerUpdated(uint256,string,string,address)\":{\"notice\":\"Emitted when an organizer's profile is updated.\"},\"contractURIUpdated(string)\":{\"notice\":\"Emitted when the general token URI is updated.\"},\"tokenURIUpdated(string,uint256)\":{\"notice\":\"Emitted when the URI of a specific artist token is updated.\"}},\"kind\":\"user\",\"methods\":{\"acceptNomination(string,string)\":{\"notice\":\"Accepts the nomination to become an organizer.\"},\"deregisterOrganizer(uint256)\":{\"notice\":\"Deregisters an organizer, removing their profile and associated data.\"},\"getOrganizer(address)\":{\"notice\":\"Retrieves detailed information about an organizer based on their wallet address.\"},\"isOrganizerRegistered(address)\":{\"notice\":\"Checks if a specific address is registered as an organizer.\"},\"nominate(address)\":{\"notice\":\"Nominates an individual to become an organizer.\"},\"setContractURI(string)\":{\"notice\":\"Updates the metadata URI for the contract.\"},\"setTokenURI(uint256,string)\":{\"notice\":\"Sets or updates the metadata URI for a specific organizer token.\"},\"updateOrganizer(uint256,string,string,address)\":{\"notice\":\"Updates the profile information of a registered organizer.\"}},\"notice\":\"Defines the interface for managing organizer profiles, including registration, updates, and deregistration.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/registry/organizer/IOrganizerRegistry.sol\":\"IOrganizerRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/registry/organizer/IOrganizerRegistry.sol\":{\"keccak256\":\"0x065b5577173293dd384a33168a887b2ca02c835b87081f11a69db0c7ad2e74ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9e14d716dc76e87102d75f59511a47c88ed6504dab521e69a30fd0db5ebfc68\",\"dweb:/ipfs/QmfNfN8ALYnRPhHwRTgNrXGHswVzBpQMLj5vLtez3QVnfd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"nominee","type":"address","indexed":true}],"type":"event","name":"OrganizerAccepted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"organizerId","type":"uint256","indexed":true}],"type":"event","name":"OrganizerDeregistered","anonymous":false},{"inputs":[{"internalType":"address","name":"nominee","type":"address","indexed":true},{"internalType":"address","name":"nominator","type":"address","indexed":true}],"type":"event","name":"OrganizerNominated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"organizerId","type":"uint256","indexed":true},{"internalType":"string","name":"name","type":"string","indexed":false},{"internalType":"address","name":"wallet","type":"address","indexed":false}],"type":"event","name":"OrganizerRegistered","anonymous":false},{"inputs":[{"internalType":"uint256","name":"organizerId","type":"uint256","indexed":true},{"internalType":"string","name":"name","type":"string","indexed":false},{"internalType":"string","name":"bio","type":"string","indexed":false},{"internalType":"address","name":"wallet","type":"address","indexed":false}],"type":"event","name":"OrganizerUpdated","anonymous":false},{"inputs":[{"internalType":"string","name":"newURI","type":"string","indexed":false}],"type":"event","name":"contractURIUpdated","anonymous":false},{"inputs":[{"internalType":"string","name":"newURI","type":"string","indexed":false},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":false}],"type":"event","name":"tokenURIUpdated","anonymous":false},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_bio","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"acceptNomination"},{"inputs":[{"internalType":"uint256","name":"organizerId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deregisterOrganizer"},{"inputs":[{"internalType":"address","name":"organizerAddress","type":"address"}],"stateMutability":"view","type":"function","name":"getOrganizer","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"bio","type":"string"},{"internalType":"address","name":"wallet","type":"address"}]},{"inputs":[{"internalType":"address","name":"organizer","type":"address"}],"stateMutability":"view","type":"function","name":"isOrganizerRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"nominee","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"nominate"},{"inputs":[{"internalType":"string","name":"newURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setContractURI"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"newURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setTokenURI"},{"inputs":[{"internalType":"uint256","name":"organizerId","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"bio","type":"string"},{"internalType":"address","name":"wallet","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateOrganizer"}],"devdoc":{"kind":"dev","methods":{"acceptNomination(string,string)":{"params":{"_bio":"The biography or description of the nominee.","_name":"The name of the nominee."}},"deregisterOrganizer(uint256)":{"params":{"organizerId":"The unique identifier of the organizer to be deregistered."}},"getOrganizer(address)":{"params":{"organizerAddress":"The wallet address of the organizer."},"returns":{"bio":"The biography or description of the organizer.","name":"The name of the organizer.","wallet":"The wallet address associated with the organizer."}},"isOrganizerRegistered(address)":{"params":{"organizer":"The address to check."},"returns":{"_0":"True if the address is registered as an organizer, otherwise false."}},"nominate(address)":{"params":{"nominee":"The address to be nominated."}},"setContractURI(string)":{"params":{"newURI":"New URI to set for the artist token."}},"setTokenURI(uint256,string)":{"params":{"newURI":"The new URI string that will represent the token's metadata.","tokenId":"The unique identifier of the organizer token."}},"updateOrganizer(uint256,string,string,address)":{"params":{"bio":"The new biography of the organizer.","name":"The new name of the organizer.","organizerId":"The unique identifier of the organizer whose information is being updated.","wallet":"The new wallet address of the organizer."}}},"version":1},"userdoc":{"kind":"user","methods":{"acceptNomination(string,string)":{"notice":"Accepts the nomination to become an organizer."},"deregisterOrganizer(uint256)":{"notice":"Deregisters an organizer, removing their profile and associated data."},"getOrganizer(address)":{"notice":"Retrieves detailed information about an organizer based on their wallet address."},"isOrganizerRegistered(address)":{"notice":"Checks if a specific address is registered as an organizer."},"nominate(address)":{"notice":"Nominates an individual to become an organizer."},"setContractURI(string)":{"notice":"Updates the metadata URI for the contract."},"setTokenURI(uint256,string)":{"notice":"Sets or updates the metadata URI for a specific organizer token."},"updateOrganizer(uint256,string,string,address)":{"notice":"Updates the profile information of a registered organizer."}},"version":1}},"settings":{"remappings":["@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/registry/organizer/IOrganizerRegistry.sol":"IOrganizerRegistry"},"evmVersion":"paris","libraries":{}},"sources":{"src/registry/organizer/IOrganizerRegistry.sol":{"keccak256":"0x065b5577173293dd384a33168a887b2ca02c835b87081f11a69db0c7ad2e74ce","urls":["bzz-raw://c9e14d716dc76e87102d75f59511a47c88ed6504dab521e69a30fd0db5ebfc68","dweb:/ipfs/QmfNfN8ALYnRPhHwRTgNrXGHswVzBpQMLj5vLtez3QVnfd"],"license":"MIT"}},"version":1},"id":53}